{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","monsters","map","mon","SearchBox","placeholder","handlechange","type","onChange","App","state","searchfield","fetch","then","res","json","users","setState","this","filtered","filter","user","toLowerCase","includes","e","target","value","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAGaA,G,YAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,aCHdC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAC,GAAG,OACnB,cAAC,EAAD,CAAmBP,QAAWO,GAAnBA,EAAIN,WCJdO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIb,UAAY,SACZc,KAAO,SACPF,YAAeA,EACfG,SAAYF,MCqCLG,E,kDAvCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IAJJ,E,gEAQO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEhB,SAASe,S,+BAGjC,IAAD,SAC4BE,KAAKR,MAA/BT,EADF,EACEA,SAAUU,EADZ,EACYA,YACZQ,EAAWlB,EAASmB,QAAO,SAAAC,GAAI,OACnCA,EAAKvB,KAAKwB,cAAcC,SAASZ,EAAYW,kBAG/C,OACE,sBAAK7B,UAAU,KAAf,UACE,iCACE,oBAAIA,UAAU,KAAd,gCAEF,cAAC,EAAD,CACEY,YAAc,iBACdC,aAAgB,SAAAkB,GAAC,OAAI,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,WAGvC,IAAnBP,EAASQ,OACV,uDACA,cAAC,EAAD,CAAU1B,SAAWkB,W,GAjCbS,a,MCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.34fbc220.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <h3>{props.monster.email}</h3>\r\n    </div>\r\n);","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const Cardlist = props => (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map(mon => (\r\n            <Card key={mon.id} monster = {mon} />\r\n        ) )}\r\n    </div>   \r\n);","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handlechange }) => (\r\n    <input \r\n        className = 'search'\r\n        type = 'search'\r\n        placeholder = {placeholder}\r\n        onChange = {handlechange}\r\n    />        \r\n)","import React, {Component} from 'react';\nimport './App.css';\nimport {Cardlist} from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      monsters: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(users => this.setState({ monsters:users }))\n  }\n\n  render(){\n    const { monsters, searchfield } = this.state\n    const filtered = monsters.filter(user => (\n      user.name.toLowerCase().includes(searchfield.toLowerCase())\n    ));\n    \n    return (\n      <div className=\"tc\">\n        <header>\n          <h1 className=\"f1\">Monsters Rolodex</h1>          \n        </header>\n        <SearchBox \n          placeholder = \"Search monster\"\n          handlechange = {e => this.setState({ searchfield: e.target.value }) }\n        />\n        { \n          (filtered.length ===0) ?\n          <h2>No results to display</h2> :\n          <Cardlist monsters= {filtered} />  \n        }                \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}